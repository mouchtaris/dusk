# vim: et ft=scala ts=4 sw=4

def util/join = !printf "%s" $args;
def p = util/join $args;

def DOCKER_CONTEXT = !cat ./etc/ci_docker_context;
def VOLUME = "dust-ctx-0";
def BASE = "dust3:base";
def DIST = "dust3:dist";
def COPY = "d3c";
def MEM = "/home/bob";
def SOURCE_TAR = "_.source.tar";

def docker = {
    !docker --context $DOCKER_CONTEXT $args
}


def docker_build = {
    let tag = p "dust3:" $args;
    !docker
        --context $DOCKER_CONTEXT
        buildx build
            --tag $tag
            --target $args
            -f Dockerfile
            "."
}

def run_mount = {
    let mount_spec = !printf "type=volume,source=%s,destination=%s" $VOLUME $MEM;

    docker run --mount $mount_spec $args
}
def run = {
    run_mount --rm $BASE $args
}
def run_sh = {
    run sh -x -e -c $args
}

def vol = {
    docker volume $args --force $VOLUME
}
def vol-ls = docker volume list;
def vol-del = vol rm;
def vol-new = vol create;

def diag = {
    run_sh "ls -la . && pwd && id -a && uname -a && date";
    0
}
def init = {
    run_sh "chown bob:bob $HOME";
    0
}
def touch = {
    run_sh "touch $1" - $args;
    0
}
def rm = {
    run_sh "rm $1" - $args;
    0
}
def rustup-dl = {
    run_sh "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs --output rustup.sh"
}
def rustup-init = {
    run_sh r#"bash rustup.sh -y --verbose "$@" "# - $args
}
def remove_cp_docker_container = {
    docker rm --force $COPY;
    0
}
def ls =
    run_sh r#"ls "$@""# - $args
;
def cp = {
    remove_cp_docker_container;

    run_mount -d --name $COPY $BASE;

    !docker cp $args;

    0
}

def upload_release = {
    cp $SOURCE_TAR "d3c:/home/bob/_.release.tar";
    run_sh "mkdir -p src bin; tar -C src -x -v -f _.release.tar --atime-preserve";
    0
}

def download_release = {
    cp "d3c:/home/bob/src/_.bin.tar" "_.dist.deb.tar";
    0
}

def cargo = {
    run_mount
        --workdir "/home/bob/src"
        --rm
        $BASE
        sh -x -e -c r#"
            . $HOME/.cargo/env &&
            cargo --color always "$@"
        "# - $args
}
def build = cargo build --all-targets;


def bootstrap = {
    run_mount
        --workdir "/home/bob/src"
        --rm
        $BASE
        sh -x -e -c r#"
            . $HOME/.cargo/env &&
            target/debug/main ci/ci-install-system &&
            which xs2 &&
            which xs-compile &&
            which xs-run &&
            which xs-debug &&
            which xs-make-self-exec &&
            which xs-write_out &&
            which xs-write_in &&
            xs2 ci/ci-compile &&
            bin/ci-tar &&
            bin/ci help
        "# - $args
}

def release = {
    upload_release;
    build;
    bootstrap;
    0
}

def del = {
    remove_cp_docker_container;
    vol-del;

    docker image rm --force $BASE $DIST;

    0
}

def new = {
    docker_build base;
    rustup-dl;
    rustup-init;
    0
}

def help = {
    !sed
        -r -n -e
        "s/^def +([^[:space:]]*).*/\1/p"
        ci/ci-test
    ;
    0
}

0
