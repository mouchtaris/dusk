# vim: et ft=scala ts=4 sw=4

include ../sys;

def nl = "
";

def fmt = !printf $args;

def p = fmt "%s" $args;
def p0 = fmt "%s\x00" $args;
def join = fmt "%s " $args;

def dirname = !tr <(!dirname $args) -d "\n";
def basename = !tr <(!basename $args) -d "\n";
def cwd = !tr <(!pwd) -d "\n";
def env = !tr <(!printenv $args) -d "\n";

def HOME = env HOME;
def HOME/ = p $HOME / $args;

def cwd/ = p (cwd) / $args;

def unpack = !base64 <(p $args) -d;

def arg_get = {
    #
    # Get first argument, n, index (from 1) of argument to echo
    #
    src _ = p0 $args;
    src _ = !tail <$_ -z -n "+1"; # Some attempt to empty the stream and avoid deadlocks
    src _ = !head <$_ -z -n "+1"; # No need to tail this because it's already length 1
    src _ = !tr <$_ -d "\000";
    let n = !cat <$_;

    #
    # Get the actual argument n
    #
    src _ = p0 $args;
    src _ = !tail <$_ -z -n "+2";
    src _ = !head <$_ -z -n $n;
    src _ = !tail <$_ -z -n "-1";
    src _ = !tr <$_ -d "\000";

    !cat <$_
}

def cp_mkdir = {
    let flags = arg_get 1 $args;
    let source = arg_get 2 $args;
    let dest = arg_get 3 $args;

    let dir = dirname $dest;

    !mkdir $flags $dir;
    !cp $flags $source $dest;
    !xs-write_out --echo $dir
}
